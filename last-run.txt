tso@laptop:~$ kubectl cluster-info
Kubernetes master is running at https://192.168.1.200:6443
KubeDNS is running at https://192.168.1.200:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
tso@laptop:~$ ^C
tso@laptop:~$ kubectl get nodes
NAME     STATUS   ROLES    AGE   VERSION
master   Ready    master   10m   v1.17.0
tso@laptop:~$ kubectl get services -o wide
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE   SELECTOR
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   10m   <none>
tso@laptop:~$ ^C
tso@laptop:~$ kubectl get pods -A -o wide
NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE     IP          NODE     NOMINATED NODE   READINESS GATES
kube-system   coredns-6955765f44-5qgrs         1/1     Running   0          10m     10.32.0.2   master   <none>           <none>
kube-system   coredns-6955765f44-v29s9         1/1     Running   0          10m     10.32.0.3   master   <none>           <none>
kube-system   etcd-master                      1/1     Running   0          10m     10.0.2.15   master   <none>           <none>
kube-system   kube-apiserver-master            1/1     Running   0          10m     10.0.2.15   master   <none>           <none>
kube-system   kube-controller-manager-master   1/1     Running   0          10m     10.0.2.15   master   <none>           <none>
kube-system   kube-proxy-6kn74                 1/1     Running   0          10m     10.0.2.15   master   <none>           <none>
kube-system   kube-scheduler-master            1/1     Running   0          10m     10.0.2.15   master   <none>           <none>
kube-system   weave-net-c5hd4                  2/2     Running   0          4m48s   10.0.2.15   master   <none>           <none>
tso@laptop:~$ scp /projects/get-started/kubernetes/yaml/dashboard* thierry@192.168.1.200:~/
thierry@192.168.1.200's password: 

[1]+  Stopped                 scp /projects/get-started/kubernetes/yaml/dashboard* thierry@192.168.1.200:~/
tso@laptop:~$ scp /projects/get-started/kubernetes/yaml/dashboard* tuto@192.168.1.200:~/
tuto@192.168.1.200's password: 
/projects/get-started/kubernetes/yaml/dashboard*: No such file or directory
tso@laptop:~$ ll /projects/learn-kubernetes/deploy-cluster-vm/
total 28
drwxr-xr-x  3 tso tso 4096 janv.  6 17:58 ./
drwxr-xr-x 11 tso tso 4096 janv.  7 14:26 ../
-rwxr-xr-x  1 tso tso  654 janv.  5 11:59 cleanup-vm.sh*
-rwxr-xr-x  1 tso tso 4335 janv.  5 10:48 deploy-vm.sh*
drwxr-xr-x  2 tso tso 4096 janv.  6 17:58 source/
-rw-r--r--  1 tso tso 2988 janv.  5 11:34 Vagrantfile
tso@laptop:~$ ll /projects/learn-kubernetes/deploy-cluster-vm/source/
total 75436
drwxr-xr-x 2 tso tso     4096 janv.  6 17:58 ./
drwxr-xr-x 3 tso tso     4096 janv.  6 17:58 ../
-rw-r--r-- 1 tso tso      377 janv.  4 23:41 dashboard-adminuser.yaml
-rw-r--r-- 1 tso tso     7568 janv.  4 23:41 dashboard-v200b8-recommended.yaml
-rw-r--r-- 1 tso tso     4292 janv.  4 23:41 k8s_bootstrap_master.sh
-rw-r--r-- 1 tso tso     3518 janv.  4 23:41 k8s_bootstrap_shared_base.sh
-rw-r--r-- 1 tso tso     1514 janv.  4 23:41 k8s_bootstrap_slave.sh
-rw-r--r-- 1 tso tso      205 janv.  4 23:41 k8s_cleanup.sh
-rw-rw-r-- 1 tso tso 77195264 oct.  17 09:15 VBoxGuestAdditions_6.0.14.iso
-rw-r--r-- 1 tso tso     6908 janv.  4 23:41 weave-v1.10.yaml
tso@laptop:~$ scp /projects/learn-kubernetes/deploy-cluster-vm/source/dashboard* tuto@192.168.1.200:~/
tuto@192.168.1.200's password: 
dashboard-adminuser.yaml                                                                                                                                                   100%  377   191.8KB/s   00:00    
dashboard-v200b8-recommended.yaml                                                                                                                                          100% 7568     2.8MB/s   00:00    
tso@laptop:~$ kubectl get nodes
NAME     STATUS     ROLES    AGE   VERSION
master   Ready      master   23m   v1.17.0
slave1   Ready      <none>   51s   v1.17.0
slave2   NotReady   <none>   21s   v1.17.0
tso@laptop:~$ kubectl get pods -A -o wide
NAMESPACE              NAME                                         READY   STATUS    RESTARTS   AGE     IP          NODE     NOMINATED NODE   READINESS GATES
kube-system            coredns-6955765f44-5qgrs                     1/1     Running   0          23m     10.32.0.2   master   <none>           <none>
kube-system            coredns-6955765f44-v29s9                     1/1     Running   0          23m     10.32.0.3   master   <none>           <none>
kube-system            etcd-master                                  1/1     Running   0          23m     10.0.2.15   master   <none>           <none>
kube-system            kube-apiserver-master                        1/1     Running   0          23m     10.0.2.15   master   <none>           <none>
kube-system            kube-controller-manager-master               1/1     Running   0          23m     10.0.2.15   master   <none>           <none>
kube-system            kube-proxy-2qmq7                             1/1     Running   0          29s     10.0.2.15   slave2   <none>           <none>
kube-system            kube-proxy-6kn74                             1/1     Running   0          23m     10.0.2.15   master   <none>           <none>
kube-system            kube-proxy-wbb28                             1/1     Running   0          59s     10.0.2.15   slave1   <none>           <none>
kube-system            kube-scheduler-master                        1/1     Running   0          23m     10.0.2.15   master   <none>           <none>
kube-system            weave-net-5vw9s                              1/2     Running   0          29s     10.0.2.15   slave2   <none>           <none>
kube-system            weave-net-c5hd4                              2/2     Running   0          18m     10.0.2.15   master   <none>           <none>
kube-system            weave-net-qlpr5                              2/2     Running   1          59s     10.0.2.15   slave1   <none>           <none>
kubernetes-dashboard   dashboard-metrics-scraper-76585494d8-5slbj   1/1     Running   0          9m15s   10.32.0.5   master   <none>           <none>
kubernetes-dashboard   kubernetes-dashboard-5996555fd8-94p8b        1/1     Running   0          9m15s   10.32.0.4   master   <none>           <none>
tso@laptop:~$ kubectl get pods -A -o wide
NAMESPACE              NAME                                         READY   STATUS    RESTARTS   AGE    IP          NODE     NOMINATED NODE   READINESS GATES
kube-system            coredns-6955765f44-5qgrs                     1/1     Running   0          24m    10.32.0.2   master   <none>           <none>
kube-system            coredns-6955765f44-v29s9                     1/1     Running   0          24m    10.32.0.3   master   <none>           <none>
kube-system            etcd-master                                  1/1     Running   0          24m    10.0.2.15   master   <none>           <none>
kube-system            kube-apiserver-master                        1/1     Running   0          24m    10.0.2.15   master   <none>           <none>
kube-system            kube-controller-manager-master               1/1     Running   0          24m    10.0.2.15   master   <none>           <none>
kube-system            kube-proxy-2qmq7                             1/1     Running   0          77s    10.0.2.15   slave2   <none>           <none>
kube-system            kube-proxy-6kn74                             1/1     Running   0          24m    10.0.2.15   master   <none>           <none>
kube-system            kube-proxy-wbb28                             1/1     Running   0          107s   10.0.2.15   slave1   <none>           <none>
kube-system            kube-scheduler-master                        1/1     Running   0          24m    10.0.2.15   master   <none>           <none>
kube-system            weave-net-5vw9s                              2/2     Running   1          77s    10.0.2.15   slave2   <none>           <none>
kube-system            weave-net-c5hd4                              2/2     Running   0          18m    10.0.2.15   master   <none>           <none>
kube-system            weave-net-qlpr5                              2/2     Running   1          107s   10.0.2.15   slave1   <none>           <none>
kubernetes-dashboard   dashboard-metrics-scraper-76585494d8-5slbj   1/1     Running   0          10m    10.32.0.5   master   <none>           <none>
kubernetes-dashboard   kubernetes-dashboard-5996555fd8-94p8b        1/1     Running   0          10m    10.32.0.4   master   <none>           <none>
tso@laptop:~$ curl http://127.0.0.1:8001/version
{
  "major": "1",
  "minor": "17",
  "gitVersion": "v1.17.0",
  "gitCommit": "70132b0f130acc0bed193d9ba59dd186f0e634cf",
  "gitTreeState": "clean",
  "buildDate": "2019-12-07T21:12:17Z",
  "goVersion": "go1.13.4",
  "compiler": "gc",
  "platform": "linux/amd64"
}tso@laptop:~$ curl http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard/version:/proxy/
{
  "kind": "Status",
  "apiVersion": "v1",
  "metadata": {
    
  },
  "status": "Failure",
  "message": "the server could not find the requested resource",
  "reason": "NotFound",
  "details": {
    
  },
  "code": 404
}tso@laptop:~$ curl http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
<!--
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <title>Kubernetes Dashboard</title>
  <link rel="icon" type="image/png" href="assets/images/kubernetes-logo.png"/>
  <meta name="viewport" content="width=device-width">
<link rel="stylesheet" href="styles.dd2d1d3576191b87904a.css"></head>

<body>
  <kd-root></kd-root>
<script src="runtime.380dd4d7ab4891f91b7b.js" defer=""></script><script src="polyfills-es5.65f1e5151c840cf04c3e.js" nomodule="" defer=""></script><script src="polyfills.8623bbc9d68876cdaaaf.js" defer=""></script><script src="scripts.7d5e232ea538f2c0f8a7.js" defer=""></script><script src="main.3036e86b43f81b098e24.js" defer=""></script></body>

</html>
tso@laptop:~$ curl http://localhost:8001/version
{
  "major": "1",
  "minor": "17",
  "gitVersion": "v1.17.0",
  "gitCommit": "70132b0f130acc0bed193d9ba59dd186f0e634cf",
  "gitTreeState": "clean",
  "buildDate": "2019-12-07T21:12:17Z",
  "goVersion": "go1.13.4",
  "compiler": "gc",
  "platform": "linux/amd64"
}tso@laptop:~$ curl http://localhost:8001/api/v1/namespaces/default/pods
{
  "kind": "PodList",
  "apiVersion": "v1",
  "metadata": {
    "selfLink": "/api/v1/namespaces/default/pods",
    "resourceVersion": "5725"
  },
  "items": []
}tso@laptop:~$ curl http://localhost:8001/api/v1/namespaces/kube-system/pods
{
  "kind": "PodList",
  "apiVersion": "v1",
  "metadata": {
    "selfLink": "/api/v1/namespaces/kube-system/pods",
    "resourceVersion": "5760"
  },
  "items": [
    {
      "metadata": {
        "name": "coredns-6955765f44-5qgrs",
        "generateName": "coredns-6955765f44-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-6955765f44-5qgrs",
        "uid": "dd9d8a33-f5cc-4cd3-bd4d-1eb37a2ee651",
        "resourceVersion": "1374",
        "creationTimestamp": "2020-01-07T13:22:22Z",
        "labels": {
          "k8s-app": "kube-dns",
          "pod-template-hash": "6955765f44"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "coredns-6955765f44",
            "uid": "1d527fbd-c9f3-4090-9e41-ac296277fa3f",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "coredns",
              "items": [
                {
                  "key": "Corefile",
                  "path": "Corefile"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "coredns-token-jvlws",
            "secret": {
              "secretName": "coredns-token-jvlws",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "coredns",
            "image": "k8s.gcr.io/coredns:1.6.5",
            "args": [
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports": [
              {
                "name": "dns",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 9153,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns"
              },
              {
                "name": "coredns-token-jvlws",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/ready",
                "port": 8181,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "all"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "nodeSelector": {
          "beta.kubernetes.io/os": "linux"
        },
        "serviceAccountName": "coredns",
        "serviceAccount": "coredns",
        "nodeName": "master",
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node-role.kubernetes.io/master",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:11Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:20Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:20Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:11Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.32.0.2",
        "podIPs": [
          {
            "ip": "10.32.0.2"
          }
        ],
        "startTime": "2020-01-07T13:28:11Z",
        "containerStatuses": [
          {
            "name": "coredns",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:28:12Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/coredns:1.6.5",
            "imageID": "docker-pullable://k8s.gcr.io/coredns@sha256:7ec975f167d815311a7136c32e70735f0d00b73781365df1befd46ed35bd4fe7",
            "containerID": "docker://b1aa238573094c9c9ea7e1d459e8bf439122628cf1fad2404bc04d8d7094d8c7",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "coredns-6955765f44-v29s9",
        "generateName": "coredns-6955765f44-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-6955765f44-v29s9",
        "uid": "44a8b75f-ae92-49ec-8adc-c8a467252ef2",
        "resourceVersion": "1383",
        "creationTimestamp": "2020-01-07T13:22:22Z",
        "labels": {
          "k8s-app": "kube-dns",
          "pod-template-hash": "6955765f44"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "coredns-6955765f44",
            "uid": "1d527fbd-c9f3-4090-9e41-ac296277fa3f",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "coredns",
              "items": [
                {
                  "key": "Corefile",
                  "path": "Corefile"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "coredns-token-jvlws",
            "secret": {
              "secretName": "coredns-token-jvlws",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "coredns",
            "image": "k8s.gcr.io/coredns:1.6.5",
            "args": [
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports": [
              {
                "name": "dns",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 9153,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns"
              },
              {
                "name": "coredns-token-jvlws",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/ready",
                "port": 8181,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "all"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "nodeSelector": {
          "beta.kubernetes.io/os": "linux"
        },
        "serviceAccountName": "coredns",
        "serviceAccount": "coredns",
        "nodeName": "master",
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node-role.kubernetes.io/master",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:22Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:22Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:14Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.32.0.3",
        "podIPs": [
          {
            "ip": "10.32.0.3"
          }
        ],
        "startTime": "2020-01-07T13:28:14Z",
        "containerStatuses": [
          {
            "name": "coredns",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:28:15Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/coredns:1.6.5",
            "imageID": "docker-pullable://k8s.gcr.io/coredns@sha256:7ec975f167d815311a7136c32e70735f0d00b73781365df1befd46ed35bd4fe7",
            "containerID": "docker://8f13186cde350f08a231e55f33cbca0a2ab9bd5a23e9001648f875e97ed0818a",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "etcd-master",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/etcd-master",
        "uid": "b25ba290-baf3-4fe6-b1af-fe3c8bda6132",
        "resourceVersion": "414",
        "creationTimestamp": "2020-01-07T13:22:08Z",
        "labels": {
          "component": "etcd",
          "tier": "control-plane"
        },
        "annotations": {
          "kubernetes.io/config.hash": "fd4c3d05c15425ef720c01f01d610704",
          "kubernetes.io/config.mirror": "fd4c3d05c15425ef720c01f01d610704",
          "kubernetes.io/config.seen": "2020-01-07T14:22:05.001148129+01:00",
          "kubernetes.io/config.source": "file"
        },
        "ownerReferences": [
          {
            "apiVersion": "v1",
            "kind": "Node",
            "name": "master",
            "uid": "7aa52908-eef3-4a5c-9f4c-fe1f69b997fc",
            "controller": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "etcd-certs",
            "hostPath": {
              "path": "/etc/kubernetes/pki/etcd",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etcd-data",
            "hostPath": {
              "path": "/var/lib/etcd",
              "type": "DirectoryOrCreate"
            }
          }
        ],
        "containers": [
          {
            "name": "etcd",
            "image": "k8s.gcr.io/etcd:3.4.3-0",
            "command": [
              "etcd",
              "--advertise-client-urls=https://192.168.1.200:2379",
              "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
              "--client-cert-auth=true",
              "--data-dir=/var/lib/etcd",
              "--initial-advertise-peer-urls=https://192.168.1.200:2380",
              "--initial-cluster=master=https://192.168.1.200:2380",
              "--key-file=/etc/kubernetes/pki/etcd/server.key",
              "--listen-client-urls=https://127.0.0.1:2379,https://192.168.1.200:2379",
              "--listen-metrics-urls=http://127.0.0.1:2381",
              "--listen-peer-urls=https://192.168.1.200:2380",
              "--name=master",
              "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
              "--peer-client-cert-auth=true",
              "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
              "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
              "--snapshot-count=10000",
              "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
            ],
            "resources": {
              
            },
            "volumeMounts": [
              {
                "name": "etcd-data",
                "mountPath": "/var/lib/etcd"
              },
              {
                "name": "etcd-certs",
                "mountPath": "/etc/kubernetes/pki/etcd"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 2381,
                "host": "127.0.0.1",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 8
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeName": "master",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:22:08Z",
        "containerStatuses": [
          {
            "name": "etcd",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:21:56Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/etcd:3.4.3-0",
            "imageID": "docker-pullable://k8s.gcr.io/etcd@sha256:4afb99b4690b418ffc2ceb67e1a17376457e441c1f09ab55447f0aaf992fa646",
            "containerID": "docker://a6d29b4a93d3a1cdc78ed6796bdf6b15ac13eb57426d4b84fb2eb6056ff785aa",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-apiserver-master",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-apiserver-master",
        "uid": "e91c36a3-b97b-4bff-b6cc-50b3d2689759",
        "resourceVersion": "415",
        "creationTimestamp": "2020-01-07T13:22:08Z",
        "labels": {
          "component": "kube-apiserver",
          "tier": "control-plane"
        },
        "annotations": {
          "kubernetes.io/config.hash": "d33ade4a26a71d82d72faab113bba73d",
          "kubernetes.io/config.mirror": "d33ade4a26a71d82d72faab113bba73d",
          "kubernetes.io/config.seen": "2020-01-07T14:22:05.001153693+01:00",
          "kubernetes.io/config.source": "file"
        },
        "ownerReferences": [
          {
            "apiVersion": "v1",
            "kind": "Node",
            "name": "master",
            "uid": "7aa52908-eef3-4a5c-9f4c-fe1f69b997fc",
            "controller": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "ca-certs",
            "hostPath": {
              "path": "/etc/ssl/certs",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-ca-certificates",
            "hostPath": {
              "path": "/etc/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-pki",
            "hostPath": {
              "path": "/etc/pki",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "k8s-certs",
            "hostPath": {
              "path": "/etc/kubernetes/pki",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "usr-local-share-ca-certificates",
            "hostPath": {
              "path": "/usr/local/share/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "usr-share-ca-certificates",
            "hostPath": {
              "path": "/usr/share/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          }
        ],
        "containers": [
          {
            "name": "kube-apiserver",
            "image": "k8s.gcr.io/kube-apiserver:v1.17.0",
            "command": [
              "kube-apiserver",
              "--advertise-address=192.168.1.200",
              "--allow-privileged=true",
              "--authorization-mode=Node,RBAC",
              "--client-ca-file=/etc/kubernetes/pki/ca.crt",
              "--enable-admission-plugins=NodeRestriction",
              "--enable-bootstrap-token-auth=true",
              "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
              "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
              "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
              "--etcd-servers=https://127.0.0.1:2379",
              "--insecure-port=0",
              "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
              "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
              "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
              "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
              "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
              "--requestheader-allowed-names=front-proxy-client",
              "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
              "--requestheader-extra-headers-prefix=X-Remote-Extra-",
              "--requestheader-group-headers=X-Remote-Group",
              "--requestheader-username-headers=X-Remote-User",
              "--secure-port=6443",
              "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
              "--service-cluster-ip-range=10.96.0.0/12",
              "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
              "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
            ],
            "resources": {
              "requests": {
                "cpu": "250m"
              }
            },
            "volumeMounts": [
              {
                "name": "ca-certs",
                "readOnly": true,
                "mountPath": "/etc/ssl/certs"
              },
              {
                "name": "etc-ca-certificates",
                "readOnly": true,
                "mountPath": "/etc/ca-certificates"
              },
              {
                "name": "etc-pki",
                "readOnly": true,
                "mountPath": "/etc/pki"
              },
              {
                "name": "k8s-certs",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/pki"
              },
              {
                "name": "usr-local-share-ca-certificates",
                "readOnly": true,
                "mountPath": "/usr/local/share/ca-certificates"
              },
              {
                "name": "usr-share-ca-certificates",
                "readOnly": true,
                "mountPath": "/usr/share/ca-certificates"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 6443,
                "host": "192.168.1.200",
                "scheme": "HTTPS"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 8
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeName": "master",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:22:08Z",
        "containerStatuses": [
          {
            "name": "kube-apiserver",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:21:56Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-apiserver:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-apiserver@sha256:e3ec33d533257902ad9ebe3d399c17710e62009201a7202aec941e351545d662",
            "containerID": "docker://3e4f124525ac46253336e1d566dbae9877489e6e5b9b12b3d2afdcb5b5a79dda",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "kube-controller-manager-master",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-controller-manager-master",
        "uid": "ba7e8ce2-4330-4668-b3d8-1077741ce7a7",
        "resourceVersion": "411",
        "creationTimestamp": "2020-01-07T13:22:08Z",
        "labels": {
          "component": "kube-controller-manager",
          "tier": "control-plane"
        },
        "annotations": {
          "kubernetes.io/config.hash": "ff3dda92fdafad8918c8b8c81e70d5fc",
          "kubernetes.io/config.mirror": "ff3dda92fdafad8918c8b8c81e70d5fc",
          "kubernetes.io/config.seen": "2020-01-07T14:22:05.001155538+01:00",
          "kubernetes.io/config.source": "file"
        },
        "ownerReferences": [
          {
            "apiVersion": "v1",
            "kind": "Node",
            "name": "master",
            "uid": "7aa52908-eef3-4a5c-9f4c-fe1f69b997fc",
            "controller": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "ca-certs",
            "hostPath": {
              "path": "/etc/ssl/certs",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-ca-certificates",
            "hostPath": {
              "path": "/etc/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-pki",
            "hostPath": {
              "path": "/etc/pki",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "flexvolume-dir",
            "hostPath": {
              "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "k8s-certs",
            "hostPath": {
              "path": "/etc/kubernetes/pki",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "kubeconfig",
            "hostPath": {
              "path": "/etc/kubernetes/controller-manager.conf",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "usr-local-share-ca-certificates",
            "hostPath": {
              "path": "/usr/local/share/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "usr-share-ca-certificates",
            "hostPath": {
              "path": "/usr/share/ca-certificates",
              "type": "DirectoryOrCreate"
            }
          }
        ],
        "containers": [
          {
            "name": "kube-controller-manager",
            "image": "k8s.gcr.io/kube-controller-manager:v1.17.0",
            "command": [
              "kube-controller-manager",
              "--allocate-node-cidrs=true",
              "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--bind-address=127.0.0.1",
              "--client-ca-file=/etc/kubernetes/pki/ca.crt",
              "--cluster-cidr=10.244.0.0/16",
              "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
              "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
              "--controllers=*,bootstrapsigner,tokencleaner",
              "--kubeconfig=/etc/kubernetes/controller-manager.conf",
              "--leader-elect=true",
              "--node-cidr-mask-size=24",
              "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
              "--root-ca-file=/etc/kubernetes/pki/ca.crt",
              "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
              "--service-cluster-ip-range=10.96.0.0/12",
              "--use-service-account-credentials=true"
            ],
            "resources": {
              "requests": {
                "cpu": "200m"
              }
            },
            "volumeMounts": [
              {
                "name": "ca-certs",
                "readOnly": true,
                "mountPath": "/etc/ssl/certs"
              },
              {
                "name": "etc-ca-certificates",
                "readOnly": true,
                "mountPath": "/etc/ca-certificates"
              },
              {
                "name": "etc-pki",
                "readOnly": true,
                "mountPath": "/etc/pki"
              },
              {
                "name": "flexvolume-dir",
                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
              },
              {
                "name": "k8s-certs",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/pki"
              },
              {
                "name": "kubeconfig",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/controller-manager.conf"
              },
              {
                "name": "usr-local-share-ca-certificates",
                "readOnly": true,
                "mountPath": "/usr/local/share/ca-certificates"
              },
              {
                "name": "usr-share-ca-certificates",
                "readOnly": true,
                "mountPath": "/usr/share/ca-certificates"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10257,
                "host": "127.0.0.1",
                "scheme": "HTTPS"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 8
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeName": "master",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:22:08Z",
        "containerStatuses": [
          {
            "name": "kube-controller-manager",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:21:56Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-controller-manager:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:0438efb5098a2ca634ea8c6b0d804742b733d0d13fd53cf62c73e32c659a3c39",
            "containerID": "docker://cd23bf3612cf853f30cc0fb010d1d7a924b63acc2dad33f58f5ea8624fb3f461",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "kube-proxy-2qmq7",
        "generateName": "kube-proxy-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-2qmq7",
        "uid": "b066d73c-3448-45c4-902b-07124246d199",
        "resourceVersion": "3960",
        "creationTimestamp": "2020-01-07T13:45:34Z",
        "labels": {
          "controller-revision-hash": "68bd87b66",
          "k8s-app": "kube-proxy",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-proxy",
            "uid": "20b88914-b67d-435a-b54e-5709fa75ca6c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-proxy",
            "configMap": {
              "name": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "kube-proxy-token-4bxmn",
            "secret": {
              "secretName": "kube-proxy-token-4bxmn",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-proxy",
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "command": [
              "/usr/local/bin/kube-proxy",
              "--config=/var/lib/kube-proxy/config.conf",
              "--hostname-override=$(NODE_NAME)"
            ],
            "env": [
              {
                "name": "NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              
            },
            "volumeMounts": [
              {
                "name": "kube-proxy",
                "mountPath": "/var/lib/kube-proxy"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "lib-modules",
                "readOnly": true,
                "mountPath": "/lib/modules"
              },
              {
                "name": "kube-proxy-token-4bxmn",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "beta.kubernetes.io/os": "linux"
        },
        "serviceAccountName": "kube-proxy",
        "serviceAccount": "kube-proxy",
        "nodeName": "slave2",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "slave2"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:34Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:51Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:51Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:34Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:45:34Z",
        "containerStatuses": [
          {
            "name": "kube-proxy",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:45:50Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-proxy@sha256:b2ba9441af30261465e5c41be63e462d0050b09ad280001ae731f399b2b00b75",
            "containerID": "docker://0f140de5d994332cb8efb89d11de22981a0c1669483def8383a652a1d63f908a",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-proxy-6kn74",
        "generateName": "kube-proxy-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-6kn74",
        "uid": "741699ac-cbad-42d5-bb6d-08149b3d7e0f",
        "resourceVersion": "397",
        "creationTimestamp": "2020-01-07T13:22:22Z",
        "labels": {
          "controller-revision-hash": "68bd87b66",
          "k8s-app": "kube-proxy",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-proxy",
            "uid": "20b88914-b67d-435a-b54e-5709fa75ca6c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-proxy",
            "configMap": {
              "name": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "kube-proxy-token-4bxmn",
            "secret": {
              "secretName": "kube-proxy-token-4bxmn",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-proxy",
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "command": [
              "/usr/local/bin/kube-proxy",
              "--config=/var/lib/kube-proxy/config.conf",
              "--hostname-override=$(NODE_NAME)"
            ],
            "env": [
              {
                "name": "NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              
            },
            "volumeMounts": [
              {
                "name": "kube-proxy",
                "mountPath": "/var/lib/kube-proxy"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "lib-modules",
                "readOnly": true,
                "mountPath": "/lib/modules"
              },
              {
                "name": "kube-proxy-token-4bxmn",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "beta.kubernetes.io/os": "linux"
        },
        "serviceAccountName": "kube-proxy",
        "serviceAccount": "kube-proxy",
        "nodeName": "master",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "master"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:22Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:24Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:24Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:22Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:22:22Z",
        "containerStatuses": [
          {
            "name": "kube-proxy",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:22:23Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-proxy@sha256:b2ba9441af30261465e5c41be63e462d0050b09ad280001ae731f399b2b00b75",
            "containerID": "docker://9ab34522befdf89445c634412601b8a7e212ec09ea5758f380f9246533476130",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-proxy-wbb28",
        "generateName": "kube-proxy-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-wbb28",
        "uid": "8631ff32-2d66-44b3-baf8-4cbbef1b2f26",
        "resourceVersion": "3822",
        "creationTimestamp": "2020-01-07T13:45:04Z",
        "labels": {
          "controller-revision-hash": "68bd87b66",
          "k8s-app": "kube-proxy",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-proxy",
            "uid": "20b88914-b67d-435a-b54e-5709fa75ca6c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-proxy",
            "configMap": {
              "name": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "kube-proxy-token-4bxmn",
            "secret": {
              "secretName": "kube-proxy-token-4bxmn",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-proxy",
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "command": [
              "/usr/local/bin/kube-proxy",
              "--config=/var/lib/kube-proxy/config.conf",
              "--hostname-override=$(NODE_NAME)"
            ],
            "env": [
              {
                "name": "NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              
            },
            "volumeMounts": [
              {
                "name": "kube-proxy",
                "mountPath": "/var/lib/kube-proxy"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "lib-modules",
                "readOnly": true,
                "mountPath": "/lib/modules"
              },
              {
                "name": "kube-proxy-token-4bxmn",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "beta.kubernetes.io/os": "linux"
        },
        "serviceAccountName": "kube-proxy",
        "serviceAccount": "kube-proxy",
        "nodeName": "slave1",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "slave1"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:05Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:23Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:23Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:04Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:45:05Z",
        "containerStatuses": [
          {
            "name": "kube-proxy",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:45:22Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-proxy:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-proxy@sha256:b2ba9441af30261465e5c41be63e462d0050b09ad280001ae731f399b2b00b75",
            "containerID": "docker://bf9d67f86c5a1833b636b0af53769660d0e588c5b444c184b10aaa29fb3a3496",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-scheduler-master",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/kube-scheduler-master",
        "uid": "9f9f9921-05df-4032-bf8c-f147119ffc69",
        "resourceVersion": "413",
        "creationTimestamp": "2020-01-07T13:22:08Z",
        "labels": {
          "component": "kube-scheduler",
          "tier": "control-plane"
        },
        "annotations": {
          "kubernetes.io/config.hash": "ff67867321338ffd885039e188f6b424",
          "kubernetes.io/config.mirror": "ff67867321338ffd885039e188f6b424",
          "kubernetes.io/config.seen": "2020-01-07T14:22:05.001157184+01:00",
          "kubernetes.io/config.source": "file"
        },
        "ownerReferences": [
          {
            "apiVersion": "v1",
            "kind": "Node",
            "name": "master",
            "uid": "7aa52908-eef3-4a5c-9f4c-fe1f69b997fc",
            "controller": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kubeconfig",
            "hostPath": {
              "path": "/etc/kubernetes/scheduler.conf",
              "type": "FileOrCreate"
            }
          }
        ],
        "containers": [
          {
            "name": "kube-scheduler",
            "image": "k8s.gcr.io/kube-scheduler:v1.17.0",
            "command": [
              "kube-scheduler",
              "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
              "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
              "--bind-address=127.0.0.1",
              "--kubeconfig=/etc/kubernetes/scheduler.conf",
              "--leader-elect=true"
            ],
            "resources": {
              "requests": {
                "cpu": "100m"
              }
            },
            "volumeMounts": [
              {
                "name": "kubeconfig",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/scheduler.conf"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10259,
                "host": "127.0.0.1",
                "scheme": "HTTPS"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 8
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeName": "master",
        "hostNetwork": true,
        "securityContext": {
          
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:22:08Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:22:08Z",
        "containerStatuses": [
          {
            "name": "kube-scheduler",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:21:56Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "k8s.gcr.io/kube-scheduler:v1.17.0",
            "imageID": "docker-pullable://k8s.gcr.io/kube-scheduler@sha256:5215c4216a65f7e76c1895ba951a12dc1c947904a91810fc66a544ff1d7e87db",
            "containerID": "docker://58868b7998b6b23d6c988e17d6f35eb6a1f9c77665850656e2dd8be4bb0e0a0f",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "weave-net-5vw9s",
        "generateName": "weave-net-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/weave-net-5vw9s",
        "uid": "fa7a075c-8667-46e4-b61c-127e0c5b71cc",
        "resourceVersion": "4060",
        "creationTimestamp": "2020-01-07T13:45:34Z",
        "labels": {
          "controller-revision-hash": "7f54576664",
          "name": "weave-net",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "weave-net",
            "uid": "918197c2-ba29-47e2-964f-453c848408e4",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "weavedb",
            "hostPath": {
              "path": "/var/lib/weave",
              "type": ""
            }
          },
          {
            "name": "cni-bin",
            "hostPath": {
              "path": "/opt",
              "type": ""
            }
          },
          {
            "name": "cni-bin2",
            "hostPath": {
              "path": "/home",
              "type": ""
            }
          },
          {
            "name": "cni-conf",
            "hostPath": {
              "path": "/etc",
              "type": ""
            }
          },
          {
            "name": "dbus",
            "hostPath": {
              "path": "/var/lib/dbus",
              "type": ""
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "weave-net-token-82plb",
            "secret": {
              "secretName": "weave-net-token-82plb",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "weave",
            "image": "docker.io/weaveworks/weave-kube:2.6.0",
            "command": [
              "/home/weave/launch.sh"
            ],
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "weavedb",
                "mountPath": "/weavedb"
              },
              {
                "name": "cni-bin",
                "mountPath": "/host/opt"
              },
              {
                "name": "cni-bin2",
                "mountPath": "/host/home"
              },
              {
                "name": "cni-conf",
                "mountPath": "/host/etc"
              },
              {
                "name": "dbus",
                "mountPath": "/host/var/lib/dbus"
              },
              {
                "name": "lib-modules",
                "mountPath": "/lib/modules"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/status",
                "port": 6784,
                "host": "127.0.0.1",
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          },
          {
            "name": "weave-npc",
            "image": "docker.io/weaveworks/weave-npc:2.6.0",
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "weave-net",
        "serviceAccount": "weave-net",
        "nodeName": "slave2",
        "hostNetwork": true,
        "hostPID": true,
        "securityContext": {
          "seLinuxOptions": {
            
          }
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "slave2"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:34Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:46:19Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:46:19Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:34Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:45:34Z",
        "containerStatuses": [
          {
            "name": "weave",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:46:17Z"
              }
            },
            "lastState": {
              "terminated": {
                "exitCode": 1,
                "reason": "Error",
                "startedAt": "2020-01-07T13:45:46Z",
                "finishedAt": "2020-01-07T13:46:16Z",
                "containerID": "docker://966268a657e6236a6bfe73c730506b873c647a05fdf9ed444a2ab8695224f383"
              }
            },
            "ready": true,
            "restartCount": 1,
            "image": "weaveworks/weave-kube:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c",
            "containerID": "docker://689e4615c4762e3a1f653ca2919a7fea7941ba98fcb1af864e5abc838aac323e",
            "started": true
          },
          {
            "name": "weave-npc",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:45:53Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "weaveworks/weave-npc:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8",
            "containerID": "docker://bd1259b05f9c80e9e4e2b3fefc45218a6df9fb2605c1375ab9a6b11db6f0d18c",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "weave-net-c5hd4",
        "generateName": "weave-net-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/weave-net-c5hd4",
        "uid": "46c1c7d1-dd8e-4355-9471-0d3c60555337",
        "resourceVersion": "1330",
        "creationTimestamp": "2020-01-07T13:27:53Z",
        "labels": {
          "controller-revision-hash": "7f54576664",
          "name": "weave-net",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "weave-net",
            "uid": "918197c2-ba29-47e2-964f-453c848408e4",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "weavedb",
            "hostPath": {
              "path": "/var/lib/weave",
              "type": ""
            }
          },
          {
            "name": "cni-bin",
            "hostPath": {
              "path": "/opt",
              "type": ""
            }
          },
          {
            "name": "cni-bin2",
            "hostPath": {
              "path": "/home",
              "type": ""
            }
          },
          {
            "name": "cni-conf",
            "hostPath": {
              "path": "/etc",
              "type": ""
            }
          },
          {
            "name": "dbus",
            "hostPath": {
              "path": "/var/lib/dbus",
              "type": ""
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "weave-net-token-82plb",
            "secret": {
              "secretName": "weave-net-token-82plb",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "weave",
            "image": "docker.io/weaveworks/weave-kube:2.6.0",
            "command": [
              "/home/weave/launch.sh"
            ],
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "weavedb",
                "mountPath": "/weavedb"
              },
              {
                "name": "cni-bin",
                "mountPath": "/host/opt"
              },
              {
                "name": "cni-bin2",
                "mountPath": "/host/home"
              },
              {
                "name": "cni-conf",
                "mountPath": "/host/etc"
              },
              {
                "name": "dbus",
                "mountPath": "/host/var/lib/dbus"
              },
              {
                "name": "lib-modules",
                "mountPath": "/lib/modules"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/status",
                "port": 6784,
                "host": "127.0.0.1",
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          },
          {
            "name": "weave-npc",
            "image": "docker.io/weaveworks/weave-npc:2.6.0",
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "weave-net",
        "serviceAccount": "weave-net",
        "nodeName": "master",
        "hostNetwork": true,
        "hostPID": true,
        "securityContext": {
          "seLinuxOptions": {
            
          }
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "master"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:27:53Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:11Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:28:11Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:27:53Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:27:53Z",
        "containerStatuses": [
          {
            "name": "weave",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:28:00Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "weaveworks/weave-kube:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c",
            "containerID": "docker://d3e7e521acfa23f9011b94e9a26b86dedcdffd2d5ed8cb452e14fbeb920f1154",
            "started": true
          },
          {
            "name": "weave-npc",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:28:04Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "weaveworks/weave-npc:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8",
            "containerID": "docker://76506e1a6740547cda1b191974c0d924cd2d66fa5be436153b31174023b079d7",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "weave-net-qlpr5",
        "generateName": "weave-net-",
        "namespace": "kube-system",
        "selfLink": "/api/v1/namespaces/kube-system/pods/weave-net-qlpr5",
        "uid": "7db79b45-c893-4a32-a817-705c7586c5d1",
        "resourceVersion": "3974",
        "creationTimestamp": "2020-01-07T13:45:04Z",
        "labels": {
          "controller-revision-hash": "7f54576664",
          "name": "weave-net",
          "pod-template-generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "weave-net",
            "uid": "918197c2-ba29-47e2-964f-453c848408e4",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "weavedb",
            "hostPath": {
              "path": "/var/lib/weave",
              "type": ""
            }
          },
          {
            "name": "cni-bin",
            "hostPath": {
              "path": "/opt",
              "type": ""
            }
          },
          {
            "name": "cni-bin2",
            "hostPath": {
              "path": "/home",
              "type": ""
            }
          },
          {
            "name": "cni-conf",
            "hostPath": {
              "path": "/etc",
              "type": ""
            }
          },
          {
            "name": "dbus",
            "hostPath": {
              "path": "/var/lib/dbus",
              "type": ""
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "weave-net-token-82plb",
            "secret": {
              "secretName": "weave-net-token-82plb",
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "weave",
            "image": "docker.io/weaveworks/weave-kube:2.6.0",
            "command": [
              "/home/weave/launch.sh"
            ],
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "weavedb",
                "mountPath": "/weavedb"
              },
              {
                "name": "cni-bin",
                "mountPath": "/host/opt"
              },
              {
                "name": "cni-bin2",
                "mountPath": "/host/home"
              },
              {
                "name": "cni-conf",
                "mountPath": "/host/etc"
              },
              {
                "name": "dbus",
                "mountPath": "/host/var/lib/dbus"
              },
              {
                "name": "lib-modules",
                "mountPath": "/lib/modules"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/status",
                "port": 6784,
                "host": "127.0.0.1",
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          },
          {
            "name": "weave-npc",
            "image": "docker.io/weaveworks/weave-npc:2.6.0",
            "env": [
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {
              "requests": {
                "cpu": "10m"
              }
            },
            "volumeMounts": [
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "weave-net-token-82plb",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "weave-net",
        "serviceAccount": "weave-net",
        "nodeName": "slave1",
        "hostNetwork": true,
        "hostPID": true,
        "securityContext": {
          "seLinuxOptions": {
            
          }
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "slave1"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:05Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:54Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:54Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2020-01-07T13:45:04Z"
          }
        ],
        "hostIP": "10.0.2.15",
        "podIP": "10.0.2.15",
        "podIPs": [
          {
            "ip": "10.0.2.15"
          }
        ],
        "startTime": "2020-01-07T13:45:05Z",
        "containerStatuses": [
          {
            "name": "weave",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:45:48Z"
              }
            },
            "lastState": {
              "terminated": {
                "exitCode": 1,
                "reason": "Error",
                "startedAt": "2020-01-07T13:45:17Z",
                "finishedAt": "2020-01-07T13:45:47Z",
                "containerID": "docker://9403c44bcefa42b127285101a879a6ac32663587ff59cd10f4f43ea2152b1bc6"
              }
            },
            "ready": true,
            "restartCount": 1,
            "image": "weaveworks/weave-kube:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-kube@sha256:e4a3a5b9bf605a7ff5ad5473c7493d7e30cbd1ed14c9c2630a4e409b4dbfab1c",
            "containerID": "docker://4d3d33fbb8473bface59e8543c359a5add4456497085686aba0f32a8302369e4",
            "started": true
          },
          {
            "name": "weave-npc",
            "state": {
              "running": {
                "startedAt": "2020-01-07T13:45:25Z"
              }
            },
            "lastState": {
              
            },
            "ready": true,
            "restartCount": 0,
            "image": "weaveworks/weave-npc:2.6.0",
            "imageID": "docker-pullable://weaveworks/weave-npc@sha256:985de9ff201677a85ce78703c515466fe45c9c73da6ee21821e89d902c21daf8",
            "containerID": "docker://0a0ca0f7a967bd56a593d0582d5f1e98bb0b1ee9d40bd26b121902d5a668611a",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    }
  ]
}tso@laptop:~$ 















tuto@master:~$ kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
Name:         admin-user-token-n4pkj
Namespace:    kubernetes-dashboard
Labels:       <none>
Annotations:  kubernetes.io/service-account.name: admin-user
              kubernetes.io/service-account.uid: 2a675be5-ebf3-4519-9de3-32d404a37521

Type:  kubernetes.io/service-account-token

Data
====
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6InJOUjVSVEpKV21xMlRjeVVPazNVNmVpcGhiUEtzQzRkSDF5dC1ad19JRFkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLW40cGtqIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyYTY3NWJlNS1lYmYzLTQ1MTktOWRlMy0zMmQ0MDRhMzc1MjEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.oCwwmVVLIiYV40AjlHIe0YbYi8mDrkJ0fP8fGxHu-SBYZlbZShVgJRZpMZOaTabgAA_y1IzZNKxByzSmlNqsiDr0CG-wVXZCWG_t_OwWMDAGPqV3xDAcD4zhl-l-9EQ0G5ZrBUbAljzPbzZph8t644vdj0uSOsB28jk_vy2kQ_yYxNLgF12jhCLsjaA0iDnq31FajTv6-9cW8BVkxyGrMcCy8kg3lDv9OX9X8osIbWZU1uTLsvVx0KttQS6n3faFrS5ujWyxZ3hMq96nCFnQDCyQSA_WT24wrenWza-deV1PGbhjXxMnZezWIUsc24rlXA1J6mhqKo6QbAZVt7uk8A
ca.crt:     1025 bytes
namespace:  20 bytes
tuto@master:~$ kubectl get nodes
NAME     STATUS     ROLES    AGE   VERSION
master   Ready      master   23m   v1.17.0
slave1   NotReady   <none>   9s    v1.17.0
tuto@master:~$ kubectl get nodes
NAME     STATUS     ROLES    AGE   VERSION
master   Ready      master   23m   v1.17.0
slave1   NotReady   <none>   33s   v1.17.0
slave2   NotReady   <none>   3s    v1.17.0
tuto@master:~$ curl http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
curl: (7) Failed to connect to localhost port 8001: Connection refused
tuto@master:~$ curl http://localhost:8001/version
curl: (7) Failed to connect to localhost port 8001: Connection refused
tuto@master:~$ 
tso@laptop:~$ ssh tuto@192.168.1.201
The authenticity of host '192.168.1.201 (192.168.1.201)' can't be established.
ECDSA key fingerprint is SHA256:3/tMgtFdHePJOh81QixB7AtVTQFBFqBs1dShgDmPjRg.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.1.201' (ECDSA) to the list of known hosts.
tuto@192.168.1.201's password: 
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 * Overheard at KubeCon: "microk8s.status just blew my mind".

     https://microk8s.io/docs/commands#microk8s.status

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

22 packages can be updated.
0 updates are security updates.

Last login: Tue Jan  7 13:04:30 2020 from 192.168.1.25
tuto@slave1:~$ kubeadm join 192.168.1.200:6443 --token f5m0sf.2p7ziygd5v75jk8g \
>     --discovery-token-ca-cert-hash sha256:5e716f15b627edfa0eb9693971d79fc4cc12e618352a13c5b2a7d6e063b2027e
W0107 14:44:48.142328   11093 join.go:346] [preflight] WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.
[preflight] Running pre-flight checks
error execution phase preflight: [preflight] Some fatal errors occurred:
	[ERROR IsPrivilegedUser]: user is not running as root
[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`
To see the stack trace of this error execute with --v=5 or higher
tuto@slave1:~$ sudo su
[sudo] password for tuto: 
root@slave1:/home/tuto# kubeadm join 192.168.1.200:6443 --token f5m0sf.2p7ziygd5v75jk8g \
>     --discovery-token-ca-cert-hash sha256:5e716f15b627edfa0eb9693971d79fc4cc12e618352a13c5b2a7d6e063b2027e
W0107 14:44:59.853508   11144 join.go:346] [preflight] WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.
[preflight] Running pre-flight checks
	[WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/
[preflight] Reading configuration from the cluster...
[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
[kubelet-start] Downloading configuration for the kubelet from the "kubelet-config-1.17" ConfigMap in the kube-system namespace
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Starting the kubelet
[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the control-plane to see this node join the cluster.

root@slave1:/home/tuto# exit
exit
tuto@slave1:~$ ^C
tuto@slave1:~$ 





tso@laptop:~$ ssh tuto@192.168.1.202
The authenticity of host '192.168.1.202 (192.168.1.202)' can't be established.
ECDSA key fingerprint is SHA256:3/tMgtFdHePJOh81QixB7AtVTQFBFqBs1dShgDmPjRg.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.1.202' (ECDSA) to the list of known hosts.
tuto@192.168.1.202's password: 
Welcome to Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

 * Overheard at KubeCon: "microk8s.status just blew my mind".

     https://microk8s.io/docs/commands#microk8s.status

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

22 packages can be updated.
0 updates are security updates.

Last login: Tue Jan  7 13:04:30 2020 from 192.168.1.25
tuto@slave2:~$ sudo su
[sudo] password for tuto: 
root@slave2:/home/tuto# kubeadm join 192.168.1.200:6443 --token f5m0sf.2p7ziygd5v75jk8g \
>     --discovery-token-ca-cert-hash sha256:5e716f15b627edfa0eb9693971d79fc4cc12e618352a13c5b2a7d6e063b2027e
W0107 14:45:28.748682   10001 join.go:346] [preflight] WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.
[preflight] Running pre-flight checks
	[WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/
[preflight] Reading configuration from the cluster...
[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
[kubelet-start] Downloading configuration for the kubelet from the "kubelet-config-1.17" ConfigMap in the kube-system namespace
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Starting the kubelet
[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the control-plane to see this node join the cluster.

root@slave2:/home/tuto# exit
exit
tuto@slave2:~$ 




tso@laptop:~$ kubectl proxy -p 8001
Starting to serve on 127.0.0.1:8001
2020/01/07 14:53:30 http: proxy error: context canceled





































